@model ControlFinWeb.App.ViewModels.FiltroParcelasVM
@using ControlFinWeb.Dominio.ObjetoValor

@{
    ViewData["Title"] = "Consulta";
}

<div id="alertParcelas" role="alert" style="display:none;"></div>
<div class="card">
    <div class="card-header"><strong>FILTRO PARCELAS</strong></div>
    <div class="card-body">
        <form id="frmFiltroParcelas" asp-action="Index">
            <input asp-for="SituacaoParcela" type="hidden" class="form-control">
            <div class="row">
                <div class="col-md-2">
                    <label asp-for="DataInicio" class="control-label"></label>
                    <div class="input-group mb-3">
                        <button class="btn btn-outline-dark" type="button" id="btnDataInicio" onclick="ProximoMes()"><i class="bi bi-chevron-double-right"></i></button>
                        <input asp-for="DataInicio" type="date" class="form-control" placeholder="" aria-label="" aria-describedby="btnDataInicio">
                    </div>
                </div>
                <div class="col-md-2">
                    <label asp-for="DataFinal" class="control-label"></label>
                    <div class="input-group mb-3">
                        <button class="btn btn-outline-dark" type="button" id="button-addon1" onclick="MesAnterior()"><i class="bi bi-chevron-double-left"></i></button>
                        <input asp-for="DataFinal" type="date" class="form-control" placeholder="" aria-label="Example text with button addon" aria-describedby="button-addon1">
                    </div>
                </div>
                <div class="col-md-1">
                    <label asp-for="TipoConta" class="control-label"></label>
                    <select class="form-select" asp-for="TipoConta" asp-items="Html.GetEnumSelectList<TipoConta>()"></select>
                </div>

                <div class="col-md-1">
                    <label asp-for="ContaFatura" class="control-label"></label>
                    <select class="form-select" asp-for="ContaFatura" asp-items="Html.GetEnumSelectList<ContaFatura>()">
                        <option value="-1">Selecione</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label asp-for="SituacaoParcela" class="control-label"></label>
                    <select id="filtroParcelas" asp-items="Html.GetEnumSelectList<SituacaoParcela>()" multiple="multiple"></select>
                </div>
                <div class="col-md-2">
                    <label asp-for="PessoaId" class="control-label">Pessoa Referenciada</label>
                    <select class="form-select" asp-for="PessoaId" asp-items="@Model.ComboPessoas"></select>
                </div>
                <div class="col-md-1">
                    <label class="control-label">Selecionados</label>
                    <input class="form-control fw-bold" value="0,00" id="totalSelecionados" readonly style="text-align:right" />
                </div>
                <div class="col-md-1">
                    <div class="row">
                        <button type="submit" class="w-100 btn btn-primary "><i class="bi bi-funnel"></i> FILTRO</button>
                        <button type="button" class="w-100 btn btn-success mt-1 pagar"><i class="bi bi-cash-coin"></i> PAGAR</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="mt-3">
    <table class="table table-bordered table-striped table-hover small" id="tabelaParcelas">
        <thead>
            <tr>
                <th><input class="form-check-input" id="checkAll" type="checkbox"></th>
                <th>Tipo</th>
                <th style="text-align:center">Nº</th>
                <th style="text-align:right">Parcela(R$)</th>
                <th style="text-align:right">Vencimento</th>
                <th style="text-align:right">Pago(R$)</th>
                <th style="text-align:right">Pagamento</th>
                <th>Situação</th>
                <th>Forma Pagamento</th>
                <th>Descrição</th>
                <th style="text-align:center">Opção</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Parcelas.OrderBy(x => x.DataVencimento))
            {
                <tr>
                    <td scope='row'><input class='form-check-input check' id='check' type='checkbox' onclick='ClickCheckItem()' value="@item.Id"></td>
                    <td style="text-align:center">
                        @if (item.ContaVM != null)
                        {

                            @Html.DisplayFor(modelItem => item.ContaVM.TipoConta)
                        }
                        else
                        {

                            @TipoConta.Pagar
                        }
                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.Numero)
                    </td>
                    <td style="text-align:right" class="valorAberto">
                        @Html.DisplayFor(modelItem => item.ValorAberto)
                    </td>
                    <td style="text-align:right">
                        @Html.Raw(item.DataVencimento.Value.ToShortDateString())
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(modelItem => item.ValorPago)
                    </td>
                    <td style="text-align:right">
                        @if (item.DataPagamento != null)
                        {
                            @Html.Raw(item.DataPagamento.Value.ToShortDateString())
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SituacaoParcela)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FormaPagamentoVM.Nome)
                    </td>
                    <td>
                        @if (item.ContaId > 0)
                        {
                            @Html.DisplayFor(modelItem => item.ContaVM.DescricaoCompleta)
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.FaturaVM.DescricaoCompleta)
                        }
                    </td>
                    <td style="text-align:center">
                        @if (item.SituacaoParcela == SituacaoParcela.Pendente || item.SituacaoParcela == SituacaoParcela.PendenteParcial || item.SituacaoParcela == SituacaoParcela.Atrasado)
                        {
                            @if (item.ContaId > 0)
                            {
                                <button type="button" class="btn btn-sm btn-warning abrirConta" data-id="@item.ContaId" data-bs-toggle="tooltip" data-bs-title="Editar Conta"><i class="bi bi-pencil-square"></i></button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-sm btn-warning abrirFatura" data-id="@item.FaturaId" data-bs-toggle="tooltip" data-bs-title="Editar Fatura"><i class="bi bi-pencil-square"></i></button>
                            }
                            <button type="button" class="btn btn-sm btn-success gerarRegistroFatura" data-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Pagar gerando registro em fatura"><i class="bi bi-credit-card"></i></button>
                        }
                        else
                        {
                            @if (item.ContaId > 0)
                            {
                                <button type="button" class="btn btn-sm btn-warning disabled" data-bs-toggle="tooltip" data-bs-title="Editar Conta"><i class="bi bi-pencil-square"></i></button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-sm btn-warning disabled" data-bs-toggle="tooltip" data-bs-title="Editar Fatura"><i class="bi bi-pencil-square"></i></button>
                            }
                            <button type="button" class="btn btn-sm btn-success disabled" data-bs-toggle="tooltip" data-bs-title="Pagar gerando registro em fatura"><i class="bi bi-credit-card"></i></button>
                        }
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr style="text-align: right">
                <th>Total</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>
</div>

<div id="modal" class="modal fade" aria-hidden="true" role="dialog" data-bs-backdrop="static" data-bs-keyboard="false"></div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {
            $('#filtroParcelas').multiselect({
                buttonClass: 'form-select',
                templates: {
                    button: '<button type="button" class="multiselect dropdown-toggle" id="filtroSituacao" data-bs-toggle="dropdown" aria-expanded="false"><span class="multiselect-selected-text"></span></button>',
                },
                buttonWidth: '100%',
                allSelectedText: 'Todos',
                nonSelectedText: 'Filtro Situação',
                nSelectedText: 'selecionado(s)',
                onChange: function (option, checked, select) {
                    SituacoesSelecionadas();
                }
            });

            $('#tabelaParcelas').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.11.5/i18n/pt-BR.json"
                },
                paging: false,
                info: false,
                searching: false,
                responsive: true,
                footerCallback: function (row, data, start, end, display) {
                    var numFormat = $.fn.dataTable.render.number('\.', ',', 2).display;
                    var api = this.api();

                    parcelaTotal = api
                        .column(3, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(a.toString().replace(",", ".")) + parseFloat(b.toString().replace(",", "."));
                        }, 0);
                    pagoTotal = api
                        .column(5, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(a.toString().replace(",", ".")) + parseFloat(b.toString().replace(",", "."));
                        }, 0);

                    // Update footer
                    $(api.column(3).footer()).html(numFormat(parcelaTotal));
                    $(api.column(5).footer()).html(numFormat(pagoTotal));

                },
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
            });
            HabilitarToolTip();
        });

        function Filtrar() {
            var dados = $("#frmFiltrarParcelas").serialize();
            $.ajax({
                url: '/Parcelas/Index',
                method: 'POST',
                data: dados,
                success: function (retorno) {
                }

            });
        }

        function ProximoMes() {

            var data = $('#DataInicio').val();
            var dataSel = new Date(data + " " + "00:00:00");

            dataSel.setMonth(dataSel.getMonth() + 1);
            var primeiroDia = new Date(dataSel.getFullYear(), dataSel.getMonth(), 1);
            var ultimoDia = new Date(dataSel.getFullYear(), dataSel.getMonth() + 1, 0);

            $('#DataInicio').val(primeiroDia.toJSON().substring(0, 10));
            $('#DataFinal').val(ultimoDia.toJSON().substring(0, 10));


        }
        function MesAnterior() {
            var data = $('#DataInicio').val();
            var dataSel = new Date(data + " " + "00:00:00");

            dataSel.setMonth(dataSel.getMonth() - 1);

            var primeiroDia = new Date(dataSel.getFullYear(), dataSel.getMonth(), 1);
            var ultimoDia = new Date(dataSel.getFullYear(), dataSel.getMonth() + 1, 0);

            $('#DataInicio').val(primeiroDia.toJSON().substring(0, 10));
            $('#DataFinal').val(ultimoDia.toJSON().substring(0, 10));
        }

        function SituacoesSelecionadas() {
            var filtro = $("#filtroParcelas").val();
            $('#SituacaoParcela').val(filtro);
        }

        //CheckAll
        $('#checkAll').change(function () {
            $('.check').prop('checked', this.checked);
            if ($(this).is(":checked")) {
                var total = @Model.TotalParcelas.ToString().Replace(".","").Replace(",",".");
                $("#totalSelecionados").val(total.toFixed(2).toString().replace(".", ","));
            } else {
                $("#totalSelecionados").val("0,00");
            }
            
        });

        function ClickCheckItem() {
            $('.check').change(function () {
               
                if ($('.check:checked').length == $('.check').length) {
                    $('#checkAll').prop('checked', true);
                }
                else {
                    $('#checkAll').prop('checked', false);
                }
            });
        }

         $('.check').click(function () {
            var totalSelecionados = parseFloat($("#totalSelecionados").val().replace(",", "."));
            var valorSelecionado = parseFloat($(this).closest('tr').find('.valorAberto').text().trim().replace(",", "."));
           
            if ($(this).is(":checked")) {
                totalSelecionados += valorSelecionado;
            } else {
                totalSelecionados -= valorSelecionado;
            }
            $("#totalSelecionados").val(totalSelecionados.toFixed(2).toString().replace(".", ","));
         });

        $(document).on(TipoClick().toString(), ".pagar", function () {
            var trs = $("tbody input:checked").closest("tr"); //pega no tr os elementos que estão checados
            var ids = $.map(trs, function (tr) { return $(tr).find('.check').val(); });
            var urlIds = ids.map((item) => { return "ids=" + item });
            if ((ids.toString() != "")) {
                Swal.fire({
                    title: 'Confirma as parcelas selecionadas?',
                    text: "Para verificar o pagamento ou recebimento acesse o caixa!",
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sim, confirmar!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            method: "GET",
                            url: '/Parcelas/PagarParcelas?' + urlIds.join("&"),
                            success: function (retorno) {
                                if (retorno.result == false) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Não é possível realizar o procedimento! Erro: ' + retorno.error,
                                    })
                                } else {
                                    $("#modal").html(retorno);
                                    $("#modal").modal("show");
                                }

                            },
                        });
                    }
                })
            } else {
                Swal.fire({
                    icon: 'warning',
                    title: 'Oops...',
                    text: 'Nenhuma parcela selecionada!',
                })
            }
        });

        $(document).on(TipoClick().toString(), ".abrirConta", function () {
            var idConta = $(this).attr("data-id");
            window.location.href = '/Contas/Editar?id=' + idConta;
        });
        $(document).on(TipoClick().toString(), ".abrirFatura", function () {
            var idFatura = $(this).attr("data-id");
            window.location.href = '/Faturas/Index?idFatura=' + idFatura;
        });

        $(document).on(TipoClick().toString(), ".gerarRegistroFatura", function () {
            var idParcela = $(this).attr("data-id");
            $("#modal").load("/Parcelas/GerarRegistroFatura?IdParcela=" + idParcela, function () {
                $("#modal").modal("show");
            })
        });

    </script>
}
