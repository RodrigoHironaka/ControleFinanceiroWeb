@model ControlFinWeb.App.ViewModels.FaturaItensVM

@{
    ViewData["Title"] = "Itens da fatura";
}

<div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title tituloItem"></h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <form asp-action="Editar" id="FrmCartaoItens">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="Id" type="hidden" />
                <input asp-for="CodigoItemRelacionado" type="hidden" />
                <input asp-for="QuantidadeRelacionado" type="hidden" />
                <input asp-for="FaturaId" style="display: none" />

                <div class="form-group">
                    <label asp-for="Nome" class="control-label"></label>
                    <input asp-for="Nome" class="form-control" />
                    <span asp-validation-for="Nome" class="text-danger"></span>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label asp-for="Valor" class="control-label"></label>
                        <input asp-for="Valor" class="form-control text-end" />
                        <span asp-validation-for="Valor" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="NumeroParcelas" class="control-label"></label> <input asp-for="Replicar" class="form-check-input" type="checkbox" /> <label asp-for="Replicar" class="control-label"></label>
                        <input asp-for="NumeroParcelas" class="form-control minUm text-end" type="number" value="1"
                               min="0"
                               max="120"
                               step="1"
                               onfocus="this.previousValue = this.value"
                               onkeydown="this.previousValue = this.value"
                               oninput="validity.valid || (value = this.previousValue)" 
                               onpaste="return false" ondrop="return false" />
                        <span asp-validation-for="NumeroParcelas" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="DataCompra" class="control-label"></label>
                        <input asp-for="DataCompra" class="form-control text-end" type="date" />
                        <span asp-validation-for="DataCompra" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="SubGastoId" class="control-label"></label>
                        <select class="form-select" asp-for="SubGastoId" asp-items="ViewBag.SubGastos">
                            <option value="0">---Selecione um item---</option>
                        </select>
                        <span asp-validation-for="SubGastoId" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="PessoaId" class="control-label"></label>
                        <select class="form-select" asp-for="PessoaId" asp-items="ViewBag.Pessoas">
                            <option value="0">---Selecione um item---</option>
                        </select>
                        <span asp-validation-for="PessoaId" class="text-danger"></span>
                    </div>
                </div>


                <br />
                <button type="button" onclick="Salvar()" class="w-100 btn btn-success btnConfirmar">Salvar</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(function() {
            $("#Valor").maskMoney({ thousands: '', decimal: ',', allowZero: true, allowNegative: true });
            $(".minUm").blur(function() {
                if ($(this).val() == "" || $(this).val() == "0") {
                    $(this).val(1);
                }
            });
        });

        function Salvar() {
            var faturaId = $("#FaturaId").val();
            var dados = $("#FrmCartaoItens").serialize();
            $.ajax({
                url: '/FaturasItens/Editar',
                method: 'POST',
                data: dados,
                success: function(retorno) {
                    $("#modal").html(retorno);
                    $("#ultimaFaturaId").val(faturaId);
                    if ($("#id").val() > 0)
                        $(".tituloItem").html("ALTERANDO ITEM");
                    else
                        $(".tituloItem").html("ADICIONAR NOVO ITEM");
                },
                error: function (retorno) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Houve um erro com o status: ' + retorno.status + '. O log foi gerado, entre em contato com o suporte!',
                    })
                }
            });
        }

        $(document).ready(function() {
            var id = $("#Id").val();
            if (parseInt(id) > 0) {
                $('#NumeroParcelas').val("1");
                $('#NumeroParcelas').prop('readonly', true);
                $('#Replicar').prop('disabled', true);
            }
        });


    </script>
}
